// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name ScribeUpSDK
import DeveloperToolsSupport
import Foundation
@_exported import ScribeUpSDK
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol SubscriptionManagerDelegate : AnyObject {
  func onExit(_ error: ScribeUpSDK.SubscriptionManagerError?)
}
extension ScribeUpSDK.SubscriptionManagerDelegate {
  public func onExit(_ error: ScribeUpSDK.SubscriptionManagerError?)
}
public struct SubscriptionManagerError : Swift.Error {
  public let code: Swift.Int
  public let message: Swift.String
  public init(code: Swift.Int, message: Swift.String)
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor @preconcurrency public class SubscriptionManagerViewController : UIKit.UIViewController, WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor @preconcurrency weak public var delegate: (any ScribeUpSDK.SubscriptionManagerDelegate)?
  @_Concurrency.MainActor @preconcurrency public init(url: Swift.String, productName: Swift.String = "Subscription Manager", delegate: (any ScribeUpSDK.SubscriptionManagerDelegate)? = nil)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @objc deinit
}
